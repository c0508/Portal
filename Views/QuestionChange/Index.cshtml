@model List<ESGPlatform.Models.ViewModels.QuestionChangeViewModel>
@{
    ViewData["Title"] = "Question Change History";
    var filter = ViewBag.Filter as ESGPlatform.Models.ViewModels.QuestionChangeFilterViewModel ?? new ESGPlatform.Models.ViewModels.QuestionChangeFilterViewModel();
    var currentPage = (int)ViewBag.CurrentPage;
    var totalPages = (int)ViewBag.TotalPages;
    var totalCount = (int)ViewBag.TotalCount;
    var pageSize = (int)ViewBag.PageSize;
}

@{
    await Html.RenderPartialAsync("_BrandingStyles");
}

<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            <div class="d-flex justify-content-between align-items-center mb-4">
                <h1 class="h3 mb-0">
                    <i class="fas fa-history text-primary me-2"></i>
                    Question Change History
                </h1>
                <div class="d-flex gap-2">
                    <a href="@Url.Action("Summary")" class="btn btn-outline-primary">
                        <i class="fas fa-chart-bar me-1"></i>
                        Summary
                    </a>
                </div>
            </div>

            <!-- Filters -->
            <div class="card mb-4">
                <div class="card-header">
                    <h5 class="card-title mb-0">
                        <i class="fas fa-filter me-2"></i>
                        Filters
                    </h5>
                </div>
                <div class="card-body">
                    <form method="get" asp-action="Index">
                        <div class="row g-3">
                            <div class="col-md-3">
                                <label asp-for="@filter.SearchText" class="form-label"></label>
                                <input asp-for="@filter.SearchText" class="form-control" placeholder="Search questions..." />
                            </div>
                            <div class="col-md-3">
                                <label asp-for="@filter.QuestionnaireId" class="form-label"></label>
                                <select asp-for="@filter.QuestionnaireId" asp-items="@filter.Questionnaires" class="form-select"></select>
                            </div>
                            <div class="col-md-3">
                                <label asp-for="@filter.Section" class="form-label"></label>
                                <select asp-for="@filter.Section" asp-items="@filter.Sections" class="form-select"></select>
                            </div>
                            <div class="col-md-3">
                                <label asp-for="@filter.ChangedBy" class="form-label"></label>
                                <select asp-for="@filter.ChangedBy" asp-items="@filter.Users" class="form-select"></select>
                            </div>
                            <div class="col-md-3">
                                <label asp-for="@filter.FieldName" class="form-label"></label>
                                <select asp-for="@filter.FieldName" asp-items="@filter.FieldNames" class="form-select"></select>
                            </div>
                            <div class="col-md-3">
                                <label asp-for="@filter.FromDate" class="form-label"></label>
                                <input asp-for="@filter.FromDate" class="form-control" type="date" />
                            </div>
                            <div class="col-md-3">
                                <label asp-for="@filter.ToDate" class="form-label"></label>
                                <input asp-for="@filter.ToDate" class="form-control" type="date" />
                            </div>
                            <div class="col-md-3 d-flex align-items-end">
                                <div class="btn-group w-100" role="group">
                                    <button type="submit" class="btn btn-primary">
                                        <i class="fas fa-search me-1"></i>
                                        Filter
                                    </button>
                                    <a href="@Url.Action("Index")" class="btn btn-outline-secondary">
                                        <i class="fas fa-times me-1"></i>
                                        Clear
                                    </a>
                                </div>
                            </div>
                        </div>
                    </form>
                </div>
            </div>

            <!-- Results -->
            <div class="card">
                <div class="card-header d-flex justify-content-between align-items-center">
                    <h5 class="card-title mb-0">
                        Changes (@totalCount total)
                    </h5>
                    @if (totalCount > 0)
                    {
                        <small class="text-muted">
                            Showing @((currentPage - 1) * pageSize + 1) to @Math.Min(currentPage * pageSize, totalCount) of @totalCount changes
                        </small>
                    }
                </div>
                <div class="card-body p-0">
                    @if (Model.Any())
                    {
                        <div class="table-responsive">
                            <table class="table table-striped table-hover mb-0">
                                <thead class="table-dark">
                                    <tr>
                                        <th>Field Changed</th>
                                        <th>Change Type</th>
                                        <th>Old Value</th>
                                        <th>New Value</th>
                                        <th>Changed By</th>
                                        <th>Date Changed</th>
                                        <th>Reason</th>
                                        <th>Actions</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var change in Model)
                                    {
                                        <tr>
                                            <td>
                                                <span class="badge bg-info">@change.FormattedFieldName</span>
                                            </td>
                                            <td>
                                                <span class="badge @(change.ChangeType == "Added" ? "bg-success" : change.ChangeType == "Removed" ? "bg-danger" : "bg-warning")">
                                                    @change.ChangeType
                                                </span>
                                            </td>
                                            <td>
                                                @if (!string.IsNullOrEmpty(change.FormattedOldValue))
                                                {
                                                    <small class="text-muted">@change.FormattedOldValue</small>
                                                }
                                                else
                                                {
                                                    <small class="text-muted font-style-italic">Empty</small>
                                                }
                                            </td>
                                            <td>
                                                @if (!string.IsNullOrEmpty(change.FormattedNewValue))
                                                {
                                                    <small>@change.FormattedNewValue</small>
                                                }
                                                else
                                                {
                                                    <small class="text-muted font-style-italic">Empty</small>
                                                }
                                            </td>
                                            <td>
                                                <div>
                                                    <small class="fw-medium">@change.ChangedByName</small><br>
                                                    <small class="text-muted">@change.ChangedByEmail</small>
                                                </div>
                                            </td>
                                            <td>
                                                <small>
                                                    @change.ChangedAt.ToString("yyyy-MM-dd HH:mm")<br>
                                                    <span class="text-muted">@change.ChangedAt.ToString("ddd")</span>
                                                </small>
                                            </td>
                                            <td>
                                                @if (!string.IsNullOrEmpty(change.ChangeReason))
                                                {
                                                    <small>@change.ChangeReason</small>
                                                }
                                                else
                                                {
                                                    <small class="text-muted font-style-italic">No reason provided</small>
                                                }
                                            </td>
                                            <td>
                                                <div class="btn-group btn-group-sm" role="group">
                                                    <a href="@Url.Action("Details", new { id = change.Id })" 
                                                       class="btn btn-outline-primary btn-sm" 
                                                       title="View Details">
                                                        <i class="fas fa-eye"></i>
                                                    </a>
                                                </div>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>

                        <!-- Pagination -->
                        @if (totalPages > 1)
                        {
                            <nav aria-label="Page navigation" class="mt-3">
                                <ul class="pagination pagination-sm justify-content-center">
                                    @if (currentPage > 1)
                                    {
                                        <li class="page-item">
                                            <a class="page-link" href="@Url.Action("Index", new { page = currentPage - 1, filter.SearchText, filter.QuestionnaireId, filter.Section, filter.ChangedBy, filter.FieldName, filter.FromDate, filter.ToDate })">
                                                <i class="fas fa-chevron-left"></i>
                                            </a>
                                        </li>
                                    }

                                    @for (int i = Math.Max(1, currentPage - 2); i <= Math.Min(totalPages, currentPage + 2); i++)
                                    {
                                        <li class="page-item @(i == currentPage ? "active" : "")">
                                            <a class="page-link" href="@Url.Action("Index", new { page = i, filter.SearchText, filter.QuestionnaireId, filter.Section, filter.ChangedBy, filter.FieldName, filter.FromDate, filter.ToDate })">
                                                @i
                                            </a>
                                        </li>
                                    }

                                    @if (currentPage < totalPages)
                                    {
                                        <li class="page-item">
                                            <a class="page-link" href="@Url.Action("Index", new { page = currentPage + 1, filter.SearchText, filter.QuestionnaireId, filter.Section, filter.ChangedBy, filter.FieldName, filter.FromDate, filter.ToDate })">
                                                <i class="fas fa-chevron-right"></i>
                                            </a>
                                        </li>
                                    }
                                </ul>
                            </nav>
                        }
                    }
                    else
                    {
                        <div class="text-center py-5">
                            <div class="text-muted">
                                <i class="fas fa-search fa-3x mb-3"></i>
                                <h5>No changes found</h5>
                                <p>Try adjusting your filters or check back later.</p>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<style>
    .font-style-italic {
        font-style: italic;
    }
</style> 