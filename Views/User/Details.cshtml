@model ESGPlatform.Models.ViewModels.UserManagementViewModel

@{
    ViewData["Title"] = "User Details";
}

<div class="d-flex justify-content-between align-items-center mb-4">
    <h2>@ViewData["Title"]</h2>
    <div>
        <a asp-action="Index" class="btn btn-secondary">
            <i class="bi bi-arrow-left"></i> Back to Users
        </a>
    </div>
</div>

<div class="row">
    <div class="col-md-8">
        <div class="card">
            <div class="card-header">
                <h4 class="card-title mb-0">
                    @Model.FirstName @Model.LastName
                    @if (Model.Roles.Contains("PlatformAdmin"))
                    {
                        <span class="badge bg-danger ms-2">Platform Administrator</span>
                    }
                    @if (!Model.IsActive)
                    {
                        <span class="badge bg-secondary ms-2">Inactive</span>
                    }
                </h4>
            </div>
            <div class="card-body">
                <dl class="row">
                    <dt class="col-sm-3">Email Address</dt>
                    <dd class="col-sm-9">
                        <a href="mailto:@Model.Email">@Model.Email</a>
                    </dd>

                    <dt class="col-sm-3">Organization</dt>
                    <dd class="col-sm-9">
                        <span class="badge bg-info">@Model.OrganizationName</span>
                    </dd>

                    <dt class="col-sm-3">Roles</dt>
                    <dd class="col-sm-9">
                        @foreach (var role in Model.Roles)
                        {
                            <span class="badge bg-secondary me-1">@GetRoleDisplayName(role)</span>
                        }
                    </dd>

                    <dt class="col-sm-3">Status</dt>
                    <dd class="col-sm-9">
                        @if (Model.IsActive)
                        {
                            <span class="badge bg-success">Active</span>
                        }
                        else
                        {
                            <span class="badge bg-secondary">Inactive</span>
                        }
                    </dd>

                    <dt class="col-sm-3">Account Created</dt>
                    <dd class="col-sm-9">@Model.CreatedAt.ToString("MMMM d, yyyy 'at' h:mm tt")</dd>

                    <dt class="col-sm-3">Last Login</dt>
                    <dd class="col-sm-9">
                        @if (Model.LastLoginAt.HasValue)
                        {
                            @Model.LastLoginAt.Value.ToString("MMMM d, yyyy 'at' h:mm tt")
                        }
                        else
                        {
                            <span class="text-muted">Never logged in</span>
                        }
                    </dd>
                </dl>
            </div>
        </div>

        @if (TempData["TempPassword"] != null)
        {
            <div class="card mt-4">
                <div class="card-header bg-info text-white">
                    <h5 class="card-title mb-0">
                        <i class="bi bi-key"></i> New Password Generated
                    </h5>
                </div>
                <div class="card-body">
                    <div class="alert alert-warning">
                        <i class="bi bi-exclamation-triangle"></i>
                        <strong>Important:</strong> Please provide the following credentials to the user:
                    </div>
                    <div class="row">
                        <div class="col-md-6">
                            <strong>Email:</strong> <code>@Model.Email</code>
                        </div>
                        <div class="col-md-6">
                            <strong>New Password:</strong> <code>@TempData["TempPassword"]</code>
                        </div>
                    </div>
                    <div class="mt-3">
                        <button type="button" class="btn btn-primary btn-sm" onclick="copyCredentials()">
                            <i class="bi bi-clipboard"></i> Copy Credentials
                        </button>
                    </div>
                </div>
            </div>
        }
    </div>

    <div class="col-md-4">
        <div class="card">
            <div class="card-header">
                <h5 class="card-title mb-0">Actions</h5>
            </div>
            <div class="card-body">
                @if (!Model.Roles.Contains("PlatformAdmin"))
                {
                    <div class="d-grid gap-2">
                        <form asp-action="ToggleStatus" asp-route-id="@Model.Id" method="post">
                            @Html.AntiForgeryToken()
                            <button type="submit" class="btn @(Model.IsActive ? "btn-warning" : "btn-success") w-100"
                                    onclick="return confirm('@(Model.IsActive ? "Deactivate" : "Activate") this user?')">
                                <i class="bi @(Model.IsActive ? "bi-pause" : "bi-play")"></i>
                                @(Model.IsActive ? "Deactivate User" : "Activate User")
                            </button>
                        </form>

                        <form asp-action="ResetPassword" asp-route-id="@Model.Id" method="post">
                            @Html.AntiForgeryToken()
                            <button type="submit" class="btn btn-info w-100"
                                    onclick="return confirm('Reset password for @Model.FirstName @Model.LastName? This will generate a new temporary password.')">
                                <i class="bi bi-key"></i> Reset Password
                            </button>
                        </form>
                    </div>
                }
                else
                {
                    <div class="alert alert-info">
                        <i class="bi bi-shield-check"></i>
                        <strong>Protected Account</strong><br>
                        Platform Administrator accounts cannot be deactivated or have passwords reset from this interface.
                    </div>
                }
            </div>
        </div>

        <div class="card mt-3">
            <div class="card-header">
                <h5 class="card-title mb-0">Role Permissions</h5>
            </div>
            <div class="card-body">
                @foreach (var role in Model.Roles)
                {
                    <div class="mb-3">
                        <h6 class="text-primary">@GetRoleDisplayName(role)</h6>
                        <ul class="small text-muted">
                            @switch (role)
                            {
                                case "PlatformAdmin":
                                    <li>Full system access</li>
                                    <li>Manage all organizations</li>
                                    <li>Manage all users</li>
                                    <li>System configuration</li>
                                    break;
                                case "OrgAdmin":
                                    <li>Manage organization settings</li>
                                    <li>Manage organization users</li>
                                    <li>Create and manage campaigns</li>
                                    <li>View all organization data</li>
                                    break;
                                case "CampaignManager":
                                    <li>Create and manage campaigns</li>
                                    <li>Assign questionnaires</li>
                                    <li>Monitor response progress</li>
                                    <li>Generate reports</li>
                                    break;
                                case "LeadResponder":
                                    <li>Coordinate response activities</li>
                                    <li>Delegate questionnaires</li>
                                    <li>Review team responses</li>
                                    <li>Submit final responses</li>
                                    break;
                                case "Responder":
                                    <li>Complete assigned questionnaires</li>
                                    <li>Upload supporting documents</li>
                                    <li>View response history</li>
                                    break;
                                case "Reviewer":
                                    <li>Review submitted responses</li>
                                    <li>Provide feedback</li>
                                    <li>Approve/reject submissions</li>
                                    <li>Generate review reports</li>
                                    break;
                            }
                        </ul>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

@functions {
    string GetRoleDisplayName(string role)
    {
        return role switch
        {
            "PlatformAdmin" => "Platform Administrator",
            "OrgAdmin" => "Organization Administrator",
            "CampaignManager" => "Campaign Manager",
            "LeadResponder" => "Lead Responder",
            "Responder" => "Responder",
            "Reviewer" => "Reviewer",
            _ => role
        };
    }
}

@section Scripts {
    <script>
        function copyCredentials() {
            var credentials = "Email: @Model.Email\nPassword: @TempData["TempPassword"]";
            navigator.clipboard.writeText(credentials).then(function() {
                alert('Credentials copied to clipboard!');
            }, function() {
                // Fallback for older browsers
                var textArea = document.createElement("textarea");
                textArea.value = credentials;
                document.body.appendChild(textArea);
                textArea.select();
                document.execCommand('copy');
                document.body.removeChild(textArea);
                alert('Credentials copied to clipboard!');
            });
        }
    </script>
} 